version: "3.8"
services:
  postgresql-db:
    image: postgres:14.2
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-init:/docker-entrypoint-initdb.d
      # To keep data between restarts uncomment the next line
      # - ./postgres-data:/var/lib/postgresql/data

  spring-boot-app:
    depends_on:
      - postgresql-db
    build: ./
    restart: on-failure
    env_file: ./.env
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:postgresql://postgresql-db:5432/challenge",
        "spring.datasource.username" : "$POSTGRES_USER",
        "spring.datasource.password" : "$POSTGRES_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "none",
        "retrofit.percentage.url" : "http://mock-service:9999/"
      }'
#    volumes:
#      - .m2:/root/.m2
    stdin_open: true
    tty: true

  mock-service:
    image: rodolpheche/wiremock:2.27.2
    ports:
      - "9999:9999"
    volumes:
      - ./mock-services:/home/wiremock/mappings
    command: --verbose --global-response-templating --local-response-templating --port 9999

  redis:
    image: redis:6.2.4
    ports:
      - "6379:6379"

volumes:
  db: